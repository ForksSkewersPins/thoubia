title: Vilsorian Elections
subtitle: The "Savage South" heads to the polls...
new-page: true
tags: event
priority: -2
view-if: year == 1929 and month >= 7
max-visits: 1
set-jump: post_election_vilsoria
set-bg: img/map_2.jpg
#face-image: img/Rothe_Wahlen_1903.jpg

= Vilsorian Elections, [+ month : month +] [+ year +]

Elections to the state of Vilsoria's regional legislature are being held. The state of Vilsoria, on the border with Leanolu, has always been beset by crime as a result of its position on the border with the *Principality of Leanolu*, an exporter of both oil (legally) and opium (illegally) to the country, and with bandits in the Moasa Desert, which covers a large swathe of Vilsoria, acting as the middlemen in this opium trade. The economic crisis has caused this banditry to grow in prevalence, with the previously governing <span style="color: #f5e324;">**RPT**</span>'s failure to effectively govern resulting in its collapse as a local party.

The <span style="color: #a22561;">**NTAP**</span> and <span style="color: #2f387f;">**FK**</span> here maintain a joint listing, the <span style="color: #5a5380;">**AOE**</span> (Alliance of Order and Unity), in competition with the left-agrarian <span style="color: #85b24d;">**BAPV**</span> (Farmer-Labor Party of Vilsoria). They will compete across thirty-two plurality districts in the region, as well as for the thirty-two proportional seats.

- @election_algorithm: May we do our best...

@post_election_vilsoria
on-arrival: {!  
const PROPORTIONAL_SEATS = 32;
const TOTAL_SEATS = 64;
const threshold = 5;

// Step 1: Normalize votes to 100%
let totalVotes = 0;
Q.party_votes = {};  // Store normalized votes here

for (let party of Q.vilsoria_parties) {
    const rawVotes = Q[party + '_votes_vilsoria'] || 0;
    Q.party_votes[party] = rawVotes;
    totalVotes += rawVotes;
}

for (let party of Q.vilsoria_parties) {
    Q.party_votes[party] = Math.round(Q.party_votes[party] * 1000 / totalVotes) / 10; // normalize to 100, 1 decimal
}

// Step 2: Filter valid parties
let validParties = Q.vilsoria_parties.filter(party => {
    return Q[party + '_banned'] !== 1 && Q.party_votes[party] >= threshold;
});

// Step 3: D’Hondt table
let dhondtTable = [];

for (let party of validParties) {
    let votes = Q.party_votes[party];
    for (let divisor = 1; divisor <= PROPORTIONAL_SEATS; divisor++) {
        dhondtTable.push({
            party: party,
            value: votes / divisor
        });
    }
}

// Step 4: Allocate top 351 seats
dhondtTable.sort((a, b) => b.value - a.value);
let topSeats = dhondtTable.slice(0, PROPORTIONAL_SEATS);

// Step 5: Count seats
let seatCounts = {};
for (let seat of topSeats) {
    seatCounts[seat.party] = (seatCounts[seat.party] || 0) + 1;
}

// Step 6: Save seats and % of seats (_seats and _r)
for (let party of Q.vilsoria_parties) {
    const seats = seatCounts[party] || 0;
    Q[party + '_seats_vilsoria'] = seats;
}

// Step 7: FPTP seats
const FPTP_SEATS = 32;
var total_weight = 0;
for (var party of Q.vilsoria_parties) {
    Q[party+'_weighted_vilsoria_votes'] = Math.pow((Q[party+'_votes_vilsoria']*Q['vilsoria_'+party]), 2);
    total_weight += Q[party+'_weighted_vilsoria_votes'];
}
for (var party of Q.vilsoria_parties) {
    Q[party+'_weighted_vilsoria_votes'] = Q[party+'_weighted_vilsoria_votes']/total_weight;
}

// Step 8: D’Hondt for FPTP seats
let fptpDhondtTable = [];

for (let party of validParties) {
    let votes = Q[party + '_weighted_vilsoria_votes'];
    for (let divisor = 1; divisor <= FPTP_SEATS; divisor++) {
        fptpDhondtTable.push({
            party: party,
            value: votes / divisor
        });
    }
}

// Sort and take top FPTP_SEATS
fptpDhondtTable.sort((a, b) => b.value - a.value);
let fptpTopSeats = fptpDhondtTable.slice(0, FPTP_SEATS);

// Count seats per party
let fptpSeatCounts = {};
for (let seat of fptpTopSeats) {
    fptpSeatCounts[seat.party] = (fptpSeatCounts[seat.party] || 0) + 1;
}

// Step 9: Add FPTP seats to total seats
for (let party of Q.vilsoria_parties) {
    const seats = fptpSeatCounts[party] || 0;
    Q[party + '_seats_vilsoria'] += seats;
    Q[party+'_vr'] = parseFloat(((Q[party + '_seats_vilsoria'] / TOTAL_SEATS) * 100).toFixed(1));  // % of seats
}

!}
on-departure: nazi_urgency = 1 if (nazi_urgency == 0 and nsdap_r >= 15)
on-display: {!
data = Q.vilsoria_parties
    .filter(party => Q[party + '_seats_vilsoria']) // Only include parties with seat data
    .map(party => ({
        id: party,
        legend: party.toUpperCase(),
        name: party.toUpperCase(),
        seats: Q[party+'_seats_vilsoria'],
        leftist: Q[party + '_leftist'] || 0 // default to 0 if undefined
    }))
    .sort((a, b) => b.leftist - a.leftist) // sort from most to least left-wing
    .map(({ leftist, ...rest }) => rest); // remove `leftist` from final output

// `data` now contains the full party display list, ordered ideologically.

if (window && d3) {
    var width = 500;
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50;
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    }
    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);

    var lines = d3.linegraph(false, false,
            Q.parties_graph,
            {'spd': '#E3000F', 'kpd': '#700000', 'ddp': '#D3C24D', 'z': '#000', 'dvp': '#D5AC27', 'dnvp': '#3E88B3', 'nsdap': '#7A3C00', 'other': '#a0a0a0', 'sapd': '#9B0000', 'dnf': '#003755', 'kvp': '#0087DC', 'lvp': '#FFCC00', 'dnef': '#BFC8CC', 'fkp': '#00C0FF'},
            {'spd': 'SPD', 'kpd': 'KPD', 'ddp': Q.ddp_name, 'z': Q.z_party_name + ' + BVP', 'dvp': 'DVP', 'dnvp': 'DNVP', 'nsdap': 'NSDAP', 'other': 'Others', 'sapd': 'SAPD', 'dnf': 'DNF', 'kvp': 'KVP', 'lvp': 'LVP', 'dnef': 'DNEF', 'fkp': 'FKP'});
    lines.width(width).height(400);
    //var svg = lines(Q.election_records);
    d3.select("#election_history").datum(Q.election_records).call(lines);
    //document.getElementById('election_history').innerHTML = svg.outerHTML;

    // party support records should not have so many ticks
    if (!Q.historical_mode) {
        var lines_2 = d3.linegraph(true, true,
            Q.parties_graph,
            {'spd': '#E3000F', 'kpd': '#700000', 'ddp': '#D3C24D', 'z': '#000', 'dvp': '#D5AC27', 'dnvp': '#3E88B3', 'nsdap': '#7A3C00', 'other': '#a0a0a0', 'sapd': '#9B0000', 'dnf': '#003755', 'kvp': '#0087DC', 'lvp': '#FFCC00', 'dnef': '#BFC8CC', 'fkp': '#00C0FF'},
            {'spd': 'SPD', 'kpd': 'KPD', 'ddp': Q.ddp_name, 'z': Q.z_party_name + ' + BVP', 'dvp': 'DVP', 'dnvp': 'DNVP', 'nsdap': 'NSDAP', 'other': 'Others', 'sapd': 'SAPD', 'dnf': 'DNF', 'kvp': 'KVP', 'lvp': 'LVP', 'dnef': 'DNEF', 'fkp': 'FKP'});
        lines_2.width(width).height(400);
        d3.select("#party_support_history").datum(Q.party_support_records).call(lines_2);
    }
}
!}
go-to: coalition_menu

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}
{!<table>!} 
<tr><td>Party</td><td>Vote share</td><td>Seats</td></tr>

<tr>
  <td><div class="box" style='background-color:#990000;'> </div> KPT:</td>
  <td>[+ kpt_votes_vilsoria +]%</td>
  <td>[+ kpt_seats_vilsoria +] ([+ kpt_vr +]%)</td>
</tr>

[? if sapo_seats_vilsoria: <tr> ?]
  [? if sapo_seats_vilsoria: <td><div class="box" style='background-color:#d4130c;'> </div> SAP(O):</td> ?]
  [? if sapo_seats_vilsoria: <td>[+ sapo_votes_vilsoria +]%</td> ?]
  [? if sapo_seats_vilsoria: <td>[+ sapo_seats_vilsoria +] ([+ sapo_vr +]%)</td> ?]
[? if sapo_seats_vilsoria: </tr> ?]

<tr>
  <td><div class="box" style='background-color:#d4130c;'> </div> SAPT:</td>
  <td>[+ sapt_votes_vilsoria +]%</td>
  <td>[+ sapt_seats_vilsoria +] ([+ sapt_vr +]%)</td>
</tr>

<tr>
  <td><div class="box" style='background-color:#85b24d;'> </div> BAPV:</td>
  <td>[+ bapv_votes_vilsoria +]%</td>
  <td>[+ bapv_seats_vilsoria +] ([+ bapv_vr +]%)</td>
</tr>

<tr>
  <td><div class="box" style='background-color:#f5e324;'> </div> RPT:</td>
  <td>[+ rpt_votes_vilsoria +]%</td>
  <td>[+ rpt_seats_vilsoria +] ([+ rpt_vr +]%)</td>
</tr>

<tr>
  <td><div class="box" style='background-color:#a86b15;'> </div> TNDP:</td>
  <td>[+ tndp_votes_vilsoria +]%</td>
  <td>[+ tndp_seats_vilsoria +] ([+ tndp_vr +]%)</td>
</tr>

<tr>
  <td><div class="box" style='background-color:#5a5380;'> </div> AOE:</td>
  <td>[+ aoe_votes_vilsoria +]%</td>
  <td>[+ aoe_seats_vilsoria +] ([+ aoe_vr +]%)</td>
</tr>

{!</table>!}

@coalition_menu

- @kpt_bapv: The <span style="color: #85b24d;">**BAPV**</span> and <span style="color: #990000;">**KPT**</span> will govern together.
- @popfront: We will govern with the <span style="color: #85b24d;">**BAPV**</span>.
- @bapv_majority: The <span style="color: #85b24d;">**BAPV**</span> is able to govern the state alone.
- @aoe: The <span style="color: #5a5380;">**AOE**</span> has won the elections.
- @no_majority: There is no clear majority.

@kpt_bapv
view-if: (kpt_vr+bapv_vr >= 50) and (sapt_vr+sapo_vr+bapv_vr < 50)
subtitle: Many in both parties are skeptical, but not many other options are there.
on-arrival: rural_kpt += 3; new_middle_nt += 5; old_middle_nt += 5; new_middle_ntap += 3; old_middle_fk += 3; socialism += 6; rural_fk -= 3; rural_ntap -= 3; rural_nt -= 3; strife += 1; kpt_in_vilsoria = 1

The <span style="color: #990000;">**KPT**</span> and <span style="color: #85b24d;">**BAPV**</span> have concluded talks on the formation of a coalition between the two parties. This move has sent ripples across not just Vilsoria but the rest of Thoubia, while some on the <span style="color: #85b24d;">**BAPV**</span>'s right flank threaten a split and affiliation with the <span style="color: #4e9933;">**AVPT**</span>. 

Immediately, rural and urban self-defense militias are created to combat banditry, while aggressive land reform is initiated seeing agricultural cooperatives take the lead. [? if minister_president == "Dahlin" : A conflict with the central government seems likely, with many of Vilsoria's laws likely overstepping a regional government's purview. ?]

The <span style="color: #5a5380;">**AOE**</span> is quick to paint these events as the bandits having usurped the regional government and now initiating their thievery from above. They have called for the army to occupy the state and restore the rule of law.

@popfront
view-if: (sapt_vr+sapo_vr+bapv_vr >= 50) and (bapv_vr < 50)
subtitle: A popular arrangement.
on-arrival: rural_sapt += 4*(1-dissent); socialism += 3; rural_fk -= 2; rural_ntap -= 2; rural_nt -= 2; sapt_in_vilsoria = 1; sapo_in_vilsoria = 1 if sapo_vr >= sapt_vr

We have entered into a coalition with the <span style="color: #85b24d;">**BAPV**</span> in the state of Vilsoria, backing their leadership of the state in return for the Labor and Education ministries.

[? if sapo_in_vilsoria : The triumph of dissident leftists compared to our central party in these elections has however limited our ability to influence government policy in spite of this development, and with the radical left course we are sure to be taking the <span style="color: #5a5380;">**AOE**</span> has wasted no time in branding us as bandits who have successfully usurped control over the government. ?]

@bapv_majority
view-if: bapv_vr >= 50
subtitle: By the farmers, for the farmers, of the farmers.
on-arrival: bapv_in_vilsoria = 1

The <span style="color: #85b24d;">**BAPV**</span> has surprisingly managed to win a lone majority in the state of Vilsoria, capitalizing off of rural discontent in the face of the Great Depression and concerns about banditry. It is a shame that we could not expand the <span style="color: #d4130c;">**SAPT**</span>'s influence, but at least the state is in good hands, with a land reform program already being initiated and rural self-defense militias being formed to fight banditry.

@aoe
view-if: aoe_vr+tndp_vr >= 50
on-arrival: rural_sapt -= 2; rural_avpt -= 2; rural_lapt -= 2; aoe_in_vilsoria = 1; coup_progress += 1; coup_progress += 1 if minister_president == "Dahlin"; coalition_dissent += 1 if minister_president == "Aspelund"
subtitle: The reactionaries score a key victory.

The <span style="color: #5a5380;">**AOE**</span> has won the elections in Vilsoria and is able to govern the state. [? if minister_president == "Dahlin" : This continues the worrying trend since the victory of Dahlin and will help the reactionary coalition in pursuing its agenda with the cooperation of local governments. ?][? if minister_president != "Dahlin" : This shows that the reactionary trend since the last elections has not been stopped by the re-election of Aspelund. We will need to act more decisively to turn this trend around. ?]

@no_majority
view-if: not ((kpt_vr+bapv_vr >= 50) and (sapt_vr+sapo_vr+bapv_vr < 50)) and not ((sapt_vr+sapo_vr+bapv_vr >= 50) and (bapv_vr < 50)) and not (bapv_vr >= 50) and not (aoe_vr+tndp_vr >= 50)
subtitle: The <span style="color: #f5e324;">**RPT**</span> will govern in a caretaker capacity

Surprisingly, the <span style="color: #f5e324;">**RPT**</span> has managed to maintain its rule of Vilsoria - not through electoral victory but simply the division of their opponents. Laws will be voted on individually, at least until the legislature is dissolved again. This will certainly not help combat crime.